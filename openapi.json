{
  "openapi": "3.1.0",
  "info": {
    "title": "learning-nestjs",
    "version": "1.0",
    "description": "Endpoint configuration for the learning nest.js project",
    "summary": "Endpoints",
    "contact": {
      "name": "David Yell",
      "email": "neon1024@gmail.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    }
  ],
  "paths": {
    "/users": {
      "parameters": [],
      "get": {
        "summary": "Get Users",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/User"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get-users-list",
        "description": "Get a list of all the users"
      },
      "post": {
        "summary": "Create user",
        "operationId": "post-users",
        "responses": {
          "201": {
            "description": "The created user object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "description": "Add a new user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "x-examples": {
                  "example-1": {
                    "first_name": "Albert",
                    "last_name": "Einstein"
                  }
                },
                "properties": {
                  "first_name": {
                    "type": "string",
                    "minLength": 1
                  },
                  "last_name": {
                    "type": "string",
                    "minLength": 1
                  }
                },
                "required": [
                  "first_name",
                  "last_name"
                ]
              },
              "examples": {}
            }
          },
          "description": "A JSON object of first_name and last_name for the user"
        }
      }
    },
    "/users/{userid}": {
      "parameters": [
        {
          "schema": {
            "type": "number"
          },
          "name": "userid",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "View a user",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "get-users-userid",
        "description": "Get a specific user by id"
      }
    },
    "/products": {
      "get": {
        "summary": "Get all products",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/Product"
                    }
                  ]
                }
              }
            }
          }
        },
        "operationId": "get-products",
        "description": "List all products from in app memory. \nNo products will exist if you have not added any since server start!"
      },
      "post": {
        "summary": "Create product",
        "operationId": "post-products",
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "description": "Create a new product and persist it to the application memory"
      }
    },
    "/products/{productid}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "productid",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "View product",
        "tags": [],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          }
        },
        "operationId": "get-products-productid",
        "description": "Fetch a single product by it's id"
      },
      "patch": {
        "summary": "Update product",
        "operationId": "patch-products-productid",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "description": "Update an existing product"
      },
      "delete": {
        "summary": "Delete product",
        "operationId": "delete-products-productid",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "null"
                }
              }
            }
          }
        },
        "description": "Delete a product"
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "description": "",
        "type": "object",
        "x-examples": {
          "example-1": {
            "first_name": "string",
            "last_name": "string"
          }
        },
        "properties": {
          "id": {
            "type": "number"
          },
          "first_name": {
            "type": "string",
            "minLength": 1
          },
          "last_name": {
            "type": "string",
            "minLength": 1
          }
        },
        "required": [
          "first_name",
          "last_name"
        ]
      },
      "Product": {
        "title": "Product",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "price": {
            "type": "number"
          }
        },
        "description": "A single instance of a product"
      }
    },
    "responses": {}
  }
}